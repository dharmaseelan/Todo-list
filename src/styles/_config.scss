//Fonts
$font-family: "Roboto", sans-serif;
$font-size: 14px; //base font size
$line-height: 1.618;
$font-weight: 400;

//typescale
$heading-typescale: minor-third;
$display-typescale: major-second;

//mobile typescale
$heading-typescale-xs: major-second; //headings
$display-typescale-xs: minor-second; //display text

//Colours
$primary-color: #3b14b9;
$secondary-color: #041928;
$tertiary-color: #f9c74f;
$quarternary-color: #e9e9e9;
$bg-light: #f9f6fd;
$bg-dark: #184a61;
$bg-color: #ffffff;
$base-white-color: #ffffff;
$base-black-color: #000000;
$font-color: #141414;

//Links
$link-color: $secondary-color; // #0052cc;
$link-color-hover: $primary-color;
$link-decoration: none;
$link-decoration-hover: none;

//custom container size
$grid: 100%;
$gutter-margin: 15%;

//breakpoints used on dashboard
$breakpoint-xlg: 1929px;
$breakpoint-lg: 1599px;
$breakpoint-md: 1170px;
$breakpoint-sm: 767px;

//container calc
$grid-size: $grid - $gutter-margin;

//placeholders
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

//Buttons - Styles
@mixin primary-btn($var: default) {
  display: inline-block;
  cursor: pointer;
  color: $base-white-color;
  background: $primary-color;
  border: 1px solid $primary-color;
  text-transform: uppercase;
  margin: 0 0.5em 0.5em;
  padding: 15px 30px;
  border-radius: 5px;
  @include trans;
  &:hover,
  &:active {
    background: $secondary-color + 20;
    border-color: $secondary-color + 20;
    text-decoration: none;
    color: $base-white-color;
  }

  @if $var == default {
    font-size: $font-size;
  } @else if $var == lg {
    font-size: 120%;
    padding: 20px 30px;
  } @else if $var == sm {
    font-size: 80%;
    padding: 10px 15px;
    background: $primary-color;
    color: $base-white-color;
  } @else if $var == inverse {
    background: $secondary-color;
    border-color: $secondary-color;
    color: $base-white-color;
    &:hover,
    &:active {
      color: $base-white-color;
      background: $primary-color + 20;
      border-color: $primary-color + 20;
    }
  } @else if $var == outline {
    background: transparent;
    border-color: $primary-color;
    color: $base-black-color;
    &:hover,
    &:active {
      color: $base-white-color;
      background: $primary-color + 20;
      border-color: $primary-color + 20;
    }
  }
}

//Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

// Mixins
@mixin fa {
  display: inline-block;
  font-family: FontAwesome;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform: translate(0, 0);
}
@mixin fas($type: null) {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  @if $type == solid {
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
  } @else if $type == regular {
    font-family: "Font Awesome 5 Free";
    font-weight: 400;
  } @else if $type == brands {
    font-family: "Font Awesome 5 Brands";
  } @else {
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
  }
}
@mixin trans($transition: default, $pseudo: nope, $pseudo_trans: nope) {
  @if $transition == default {
    $transition: all 0.3s ease;
  }
  @if $transition != null {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    transition: $transition;
  }
  @if $pseudo ==
    before or
    $pseudo ==
    after or
    $pseudo ==
    hover or
    $pseudo ==
    active or
    $pseudo ==
    focus or
    $pseudo ==
    target
  {
    &:#{$pseudo} {
      @if $pseudo_trans != nope {
        $transition: $pseudo_trans;
      }
      -webkit-transition: $transition;
      -moz-transition: $transition;
      transition: $transition;
    }
  }
}
@mixin center($xy: xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  } @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  } @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
@mixin flex($val: display) {
  @if $val == display {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
  } @else {
    -moz-flex: $val;
    -webkit-flex: $val;
    flex: $val;
  }
}
@mixin justify-content($value: center) {
  -webkit-box-pack: $value;
  -ms-flex-pack: $value;
  -ms-justify-content: $value;
  -webkit-justify-content: $value;
  justify-content: $value;
}
@mixin flex-direction($value) {
  -ms-flex-direction: $value;
  -webkit-flex-direction: $value;
  flex-direction: $value;
}
@mixin flex-flow($value) {
  -ms-flex-flow: $value;
  -webkit-flex-flow: $value;
  flex-flow: $value;
}
@mixin flex-wrap($value: wrap) {
  -ms-flex-wrap: $value;
  -webkit-flex-wrap: $value;
  flex-wrap: $value;
}
@mixin align-items($value: center) {
  -webkit-align-items: $value;
  align-items: $value;
}
@mixin align-content($value: center) {
  -webkit-align-content: $value;
  align-content: $value;
}
@mixin object-fit($val: cover) {
  @if $val == contain {
    font-family: "object-fit: contain;";
    object-fit: contain;
  } @else {
    font-family: "object-fit: cover; object-position: 50% 50%;";
    object-fit: cover;
  }
}
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}
@mixin animate($name, $options: ease 1 normal) {
  -webkit-animation: $name $options;
  -o-animation: $name $options;
  animation: $name $options;
}
@mixin line-clamp($fontsize, $lineheight, $lines) {
  font-size: $fontsize;
  line-height: $lineheight !important;
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;
  /* IGNORELINE */
  height: $fontsize * $lineheight * $lines; /* Fallback for non-webkit */
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin lineclamp($lineheight, $lines) {
  line-height: $lineheight !important;
  display: block;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin content-column($column, $columnGap: 10px) {
  -webkit-column-count: $column;
  -moz-column-count: $column;
  column-count: $column;
  -webkit-column-gap: $columnGap;
  -moz-column-gap: $columnGap;
  column-gap: $columnGap;
}
